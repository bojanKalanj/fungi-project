- nested = {} unless defined?(nested)
.row
  .col-lg-12
    .panel.panel-default
      .panel-body
        .table-responsive
          table.table.table-striped.table-bordered.table-hover.dataTable
            thead
              tr
                - fields.each do |field|
                  th = field[:no_label] ? '' : t("#{resource_name}.attributes.#{field[:name]}")
            tbody
              - resources.each_slice(2) do |pair|
                - pair.each_with_index do |resource, i|
                  tr[class=(i == 0 ? 'odd' : 'even')]
                    - field_method = fields.first[:field]
                    - value = resource.send(fields.first[:name])
                    - value = value.send(field_method) if field_method
                    td[class=fields.first[:class]]
                      - if !nested.blank?
                        = link_to(value, send(nested[:path], nested[:in], resource), remote: true)
                      - else
                        = link_to(value, resource.resource_name_path)
                    - fields[1..-2].each do |field|
                      - field_method = field[:field]
                      - value = resource.send(field[:name])
                      - value = value.send(field_method) if value && field_method
                      td[class=field[:class]]
                        - if value.blank?
                          = '-'
                        - elsif field[:method]
                          = send(field[:method], value, field[:options])
                        - else
                          = value

                    td.no-wrap
                      - path = nested.blank? ? resource.resource_edit_path : send(nested[:edit_path], nested[:in], resource)
                      = link_to path, class: 'btn btn-outline btn-primary btn-xs', title: t("helpers.links.edit"), remote: !nested.blank? do
                        = fo_icon_tag(:edit)
                      '
                      - path = nested.blank? ? resource.resource_name_path(source: 'index') : send(nested[:path], nested[:in], resource, source: 'index')
                      = link_to path, title: t("helpers.links.destroy"), method: :delete, remote: !nested.blank?, data: { :confirm => t('helpers.links.confirm') }, class: 'btn btn-xs btn-danger btn-outline' do
                        = fo_icon_tag(:delete)